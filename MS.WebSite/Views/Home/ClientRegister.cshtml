@model MS.Models.Models.CheckClientModel
@using MS.Localization;
@{
    ViewBag.Title = Strings.Registration;
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
<div class="login-head">
    <h1>@Strings.Registration</h1>
</div>
<div class="login-block">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        if (ViewBag.ShowVerificationField == true || ViewBag.ShowPasswordField == true)
        {
            @Html.HiddenFor(model => model.Email)
            @Html.HiddenFor(model => model.ClubCard)
            @*<div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.ClubCard, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ClubCard, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClubCard, "", new { @class = "text-danger" })
                </div>
            </div>*@
        }
        else
        {
            <input type="text" name="Email" placeholder="@Strings.Email" required="">
            <input type="text" name="ClubCard" placeholder="Club card" required="">
            @*<div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ClubCard, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ClubCard, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClubCard, "", new { @class = "text-danger" })
                </div>
            </div>*@
        }

        if (ViewBag.ShowVerificationField == true)
        {
            <input type="text" name="VerivicationCode" placeholder="Verivication Code" required="">
            @*<div class="form-group">
                @Html.LabelFor(model => model.VerivicationCode, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.VerivicationCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VerivicationCode, "", new { @class = "text-danger" })
                </div>
            </div>*@
        }
        if (ViewBag.ShowPasswordField == true)
        {
            <input type="password" name="Password" placeholder="@Strings.Password" required="">
            <input type="password" name="ConfirmPassword" placeholder="@Strings.ConfirmPassword" required="">
            @*<div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>*@
        }
        <div>
            <p>
                @ViewBag.Message
            </p>
        </div>
        <div class="form-group">
            <input type="submit" value="@Strings.Check" class="btn btn-default" />
        </div>
    }
    <h5>@Html.ActionLink(Strings.GoBackHome, MVC.Home.Index())</h5>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
